{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\Internship-assessment\\\\src\\\\context\\\\layout\\\\LayoutState.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport LayoutContext from \"./LayoutContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LayoutState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const layoutInitial = [];\n  const [layouts, setLayouts] = useState(layoutInitial);\n  //fetch all notes\n  const getLayouts = async () => {\n    const response = await fetch(`${host}/api/layouts/fetchalllayout`, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    setLayouts(json);\n  };\n\n  //search layout using get request\n  const searchData = async () => {\n    const response = await fetch(`${host}/api/layouts/fetchalllayout`, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    setLayouts(json);\n  };\n\n  //add note\n  const addLayouts = async (fname, date, email, phone) => {\n    const response = await fetch(`${host}/api/layouts/addlayout`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        fname,\n        date,\n        email,\n        phone\n      })\n    });\n    const note = await response.json();\n    setLayouts(layouts.concat(note));\n  };\n  return /*#__PURE__*/_jsxDEV(LayoutContext.Provider, {\n    value: {\n      layouts,\n      setLayouts,\n      getLayouts,\n      addLayouts,\n      searchData\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(LayoutState, \"I1EFzUKuaHRnzMuVXghXgkxY6BU=\");\n_c = LayoutState;\nexport default LayoutState;\nvar _c;\n$RefreshReg$(_c, \"LayoutState\");","map":{"version":3,"names":["useState","LayoutContext","LayoutState","props","host","layoutInitial","layouts","setLayouts","getLayouts","response","fetch","method","headers","localStorage","getItem","json","searchData","addLayouts","fname","date","email","phone","body","JSON","stringify","note","concat","children"],"sources":["E:/Work/Internship-assessment/src/context/layout/LayoutState.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport LayoutContext from \"./LayoutContext\";\r\n\r\nconst LayoutState = (props) => {\r\n    const host = \"http://localhost:5000\"\r\n    const layoutInitial = []\r\n    const [layouts, setLayouts] = useState(layoutInitial)\r\n    //fetch all notes\r\n    const getLayouts = async () => {\r\n        const response = await fetch(`${host}/api/layouts/fetchalllayout`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"auth-token\": localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        const json = await response.json()\r\n        setLayouts(json)\r\n    }\r\n\r\n        //search layout using get request\r\n        const searchData = async () => {\r\n            const response = await fetch(`${host}/api/layouts/fetchalllayout`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                    \"auth-token\": localStorage.getItem(\"token\")\r\n                }\r\n            });\r\n            const json = await response.json()\r\n            setLayouts(json)\r\n        }\r\n\r\n\r\n    //add note\r\n    const addLayouts = async (fname, date, email, phone) => {\r\n        const response = await fetch(`${host}/api/layouts/addlayout`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"auth-token\": localStorage.getItem(\"token\")\r\n            },\r\n            body: JSON.stringify({ fname, date, email, phone })\r\n        });\r\n        const note = await response.json()\r\n        setLayouts(layouts.concat(note))\r\n    }\r\n    return (\r\n        <LayoutContext.Provider value={{ layouts, setLayouts, getLayouts, addLayouts, searchData}}>\r\n            {props.children}\r\n        </LayoutContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default LayoutState"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAE5C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAMC,IAAI,GAAG,uBAAuB;EACpC,MAAMC,aAAa,GAAG,EAAE;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAACK,aAAa,CAAC;EACrD;EACA,MAAMG,UAAU,GAAG,YAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,6BAA4B,EAAE;MAC/DO,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAC9C;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,EAAE;IAClCR,UAAU,CAACQ,IAAI,CAAC;EACpB,CAAC;;EAEG;EACA,MAAMC,UAAU,GAAG,YAAY;IAC3B,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,6BAA4B,EAAE;MAC/DO,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAC9C;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,EAAE;IAClCR,UAAU,CAACQ,IAAI,CAAC;EACpB,CAAC;;EAGL;EACA,MAAME,UAAU,GAAG,OAAOC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,KAAK;IACpD,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,wBAAuB,EAAE;MAC1DO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAC9C,CAAC;MACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,KAAK;QAAEC,IAAI;QAAEC,KAAK;QAAEC;MAAM,CAAC;IACtD,CAAC,CAAC;IACF,MAAMI,IAAI,GAAG,MAAMhB,QAAQ,CAACM,IAAI,EAAE;IAClCR,UAAU,CAACD,OAAO,CAACoB,MAAM,CAACD,IAAI,CAAC,CAAC;EACpC,CAAC;EACD,oBACI,QAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEnB,OAAO;MAAEC,UAAU;MAAEC,UAAU;MAAES,UAAU;MAAED;IAAU,CAAE;IAAA,UACrFb,KAAK,CAACwB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAGjC,CAAC;AAAA,GAlDKzB,WAAW;AAAA,KAAXA,WAAW;AAoDjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}